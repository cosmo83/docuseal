default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

  host: <%= begin
    require 'json'
    JSON.parse(ENV['VCAP_SERVICES']).values.flatten
      .find { |s| s['label'] == 'postgresql' || s['name'] =~ /postgres/i }
      .dig('credentials', 'host')
  end %>

  port: <%= begin
    JSON.parse(ENV['VCAP_SERVICES']).values.flatten
      .find { |s| s['label'] == 'postgresql' || s['name'] =~ /postgres/i }
      .dig('credentials', 'port')
  end %>

  username: <%= begin
    JSON.parse(ENV['VCAP_SERVICES']).values.flatten
      .find { |s| s['label'] == 'postgresql' || s['name'] =~ /postgres/i }
      .dig('credentials', 'username')
  end %>

  password: <%= begin
    JSON.parse(ENV['VCAP_SERVICES']).values.flatten
      .find { |s| s['label'] == 'postgresql' || s['name'] =~ /postgres/i }
      .dig('credentials', 'password')
  end %>

  database: <%= begin
    JSON.parse(ENV['VCAP_SERVICES']).values.flatten
      .find { |s| s['label'] == 'postgresql' || s['name'] =~ /postgres/i }
      .dig('credentials', 'dbname')
  end %>

  search_path: <%= ENV['SEARCH_PATH'] || 'public' %>

development:
  <<: *default

test:
  <<: *default

production:
  <<: *default
